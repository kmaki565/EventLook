# This is a basic workflow to help you get started with Actions

name: CI
env:
  PROJECT_NAME: EventLook

# Controls when the action will run. Triggers the workflow on every push or pull request event
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4
    - uses: nuget/setup-nuget@v2
    - run: nuget restore ${{ env.PROJECT_NAME }}.sln
    - uses: microsoft/setup-msbuild@v2
    - run: msbuild ${{ env.PROJECT_NAME }}.sln '/p:Configuration=Release;Platform=x64;AppxBundle=Always;AppxBundlePlatforms=x64|x86|arm64;AppxPackageSigningEnabled=false'
    - name: Run unit test
      run: dotnet test Tests\Tests.csproj
    - name: Delete large runtime folder and save x64 only to reduce size of artifact
      run: |
        Remove-Item -Recurse ${{ env.PROJECT_NAME }}\bin\ARM64
        Remove-Item -Recurse ${{ env.PROJECT_NAME }}\bin\x86
        Remove-Item -Recurse ${{ env.PROJECT_NAME }}\bin\x64\Release\net8.0-windows10.0.17763.0\win-x64
        Remove-Item -Recurse ${{ env.PROJECT_NAME }}\bin\Debug
    # Save artifacts
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PROJECT_NAME }}-${{ github.sha }}
        path: ${{ env.PROJECT_NAME }}\bin
